V2 TODO:
[X] rotate trees away from sphere
[X] spawn trees in random positions around the planet
[X] look for better background
[X] connect react to webgl
[X] remove leaderboards
[X] remove google button login requirement from all components
[X] reformat db.json -> pomodoros completed today, this week, this month, this year, and in total
[X] after completed pomodoro, send api response to server and add to overall count of trees
[X] spawn trees: total # of completed pomodoros from server
[X] check chart requirements and send day, week, month, and year data to server
[X] request data from server and show on charts
[X] host
[X] are env files missing?
[X] check if build will work on browser
[] ask user permission for notifications at onClick
[] add loading spinner
[] put on portfolio
[] make explanation pages for each project

//V1 TODO:
//(DONE) COMPLETION METHOD -> CREATE TIMER
//(DONE) RENDER TEXT OF CURRENT ACTIVITY (RESTING OR WORKING)
//(DONE) CREATE USEEFFECT FOR SETTING LONG BREAK + SHORT BREAK + WORK ON TIME VARIABLE BASED ON POMODORO COUNT AND ACTIVITY STATES
//(DONE) SEND USER NOTIFICATIONS
//(DONE) START SOUND
//(DONE) SHORTEN IF STATEMENTS FOR COMPLETION
//(DONE) CREATE USESTATE FOR LONG KEY WORD AND ADD IT NEXT TO THE ACTIVITY
//(DONE) COUNTING COMPLETIONS
//(DONE) STOPPING === NO COUNTED COMPLETION
//(DONE) COMPLETION COUNTER AT TOP OF SCREEN
//(DONE) IMPORT REACT-ROUTER-DOM
//(DONE) CREATE LINKS, ROUTES, AND BROWSERROUTERS
//(DONE) STYLE LINKS INTO BUTTONS
//(DONE) CREATE SERVER FOR STATISTICS
//(DONE) MAKE AXIOS REQUEST
//(DONE) CREATE STATISTICS PAGE
//(DONE) ADD LIFETIME TOTAL AND DISPLAY ON TOP OF SCREEN
//(DONE) ADD POMODORO TOTALS FOR CURRENT HOUR AND TOTAL HOUR COUNT TO SERVER
//(DONE) REMOVE OLD DATA ONCE NEW DAY STARTS
//(DONE) ADD POMODORO TOTALS FOR CURRENT WEEK AND TOTAL WEEK COUNT TO SERVER
//(DONE) REMOVE OLD DATA ONCE NEW WEEK STARTS
//(DONE) ADD POMODORO TOTALS FOR CURRENT MONTH AND TOTAL MONTH COUNT TO SERVER
//(DONE) REMOVE OLD DATA ONCE NEW MONTH STARTS
//(DONE) ADD POMODORO TOTALS FOR CURRENT YEAR AND TOTAL YEAR COUNT TO SERVER
//(DONE) REMOVE OLD DATA ONCE NEW YEAR STARTS
//(DONE) CREATE PLACEHOLDER DAY GRAPH
//(DONE) STYLE NAVIGATION BUTTONS FOR STATS
//(DONE) MOVE ROUTES TO INDEX.JS
//(DONE) SET UP NAVIGATION WITH ROUTES + LINKS FOR EACH GRAPH
//(DONE) RESPONSIVE DESIGN GRAPHS
//(DONE) CREATE ALL PLACEHOLDER GRAPHS
//(DONE) CONNECT GRAPHS TO SERVER (DAY(DONE), WEEK(), MONTH(), YEAR())
//(DONE) CONNECT NECK AND EVERYTHING ELSE IN BLENDER TO CAT AND EXPORT AS FBX
//(DONE) CREATE BASIC ANIMATION IN UNITY
//(DONE) CREATE WEBGL BUILD
//(DONE) IMPORT REACT-UNITY-WEBGL AND SHOW CAT
//(DONE) ON CLICK, RUN ANIMATION
//(DONE) SET WORLD UNDERNEATH CAT
//(DONE) MOVE WEBGL APP INTO POMODORO APP
//(DONE) REMOVE ASYNC AND AWAIT
//(DONE) MOVE ELEMENTS ON TOP OF WEBGL
//(DONE) ADD FEEDING ANIMATION
//(DONE) SIZE CHANGES AFTER EACH POMODORO
//(DONE) SET PET SIZE ACCORDING TO POMODORO COUNT
//(DONE) CREATE NEW WORLD AND ASSETS
//(DONE) SHOW/HIDE OBJECTS
//(DONE) FIX PET SIZE AT FIRST LOAD ACCORDING TO POMODORO COUNT
//(DONE) CREATE CAMERA SLOW ZOOM OUT AND QUICK ZOOM ON UNITY LOAD
//(DONE) SLOW DOWN GROWTH
//(DONE) SCALE PET SIZE, CAMERA, AND CLOUD ACCORDINGLY
//(DONE) FIX GIT -> UPGRADE TO LARGE FILE SYSTEM
//(DONE) ADD SKYBOX
//(DONE) FIX SKYBOX POSITION
//(DONE) CHANGE 3D WORLDS ONCE POMODORO REACHES CERTAIN NUMBER
//(DONE) REMOVE COUNTER TEXT
//(DONE) CHECK IF SLOW PET SIZE INCREASE INSTEAD OF CLOUD ANIM LOOKS BETTER
//(DONE) FIX SHADOWS
//(DONE) COVER SCREEN WITH CLOUDS ONCE WORLD CHANGES
//(DONE) SET CHART TO BE RESPONSIVE ON MOUNT AND ON MANUAL SCREEN SIZE CHANGE
//(DONE) FIX SERVER(DONE), STATS.JS(DONE), AND TIMER.JS(DONE) SO DB STARTS AT 0
//(DONE) DISPLAY TOTALS ON STATS.JS PAGES
//(DONE) PERFECT RESPONSIVE TIMER (DONE), STATS (DONE), AND WEBGL (DONE)
//(DONE) CHANGE SKYBOX ON EARTH DISPLAY
//(DONE) SET COUNTDOWN TIMERS TO 25 and 5
//(DONE) DESIGN AND CREATE GOOGLE LOG IN BUTTON
//(DONE) ADD ALERT COVERING SCREEN
//(DONE) FIX RESPONSIVE ALERT
//(DONE) SLIDE NAV MENU FROM RIGHT
//(DONE) SHOW / HIDE GOOGLE LOGIN BUTTON
//(DONE) SET NAV ICONS
//(DONE) FIX GOOGLE BUTTON STYLING
//(DONE) RESPONSIVE NAV MENU
//(DONE) CHANGE ROUTERS WITH COMPONENTS AS CHILDREN
//(DONE) MOVE USERID STATES FROM ROUTERS TO CHILDREN
//(DONE) SHOW ALERT AFTER GOOGLE BUTTON LOADS AND WHEN USER IS NOT LOGGED IN
//(DONE) CONNECT DB AND SERVER FOR INDIVIDUAL GOOGLE ID'S
//(DONE) ON LOGIN => AXIOS GET FOR USERID, IF NON EXISTENT, AXIOS POST TEMPLATE DATA
//(DONE) RUN RESET FUNCTIONS WHILE USER IS STILL IN THE APP AND THE DAY CHANGES
//(DONE) INSERT USERID FOR EACH AXIOS REQUEST IN TIMER(DONE) AND STATS(DONE)
//(DONE) REQUIRE LOG IN TO SHOW STATS
//(DONE) REMOVE LOOPED PATCH PAYLOADS
//(DONE) FIX RESPONSIVE HAMGBURGER ICON
//(DONE) RESET ALL FILES WITH API FILE
//(DONE) CHANGE USERID !== NULL TO JUST USERID
//(DONE) SHOW SPINNING LOADER WHEN ON STATS PAGE UNTIL USERID AND AXIOS IS CONNECTED
//(DONE) HIDE SPINNING LOADER WHILE LOGGED OFF ON TIMER
//(DONE) AXIOS REQUEST SETINTERVAL UNTIL DB SERVER IS ONLINE FOR STATS
//(DONE) CANCEL AXIOS REQUESTS ON WINDOW CHANGE FOR STATS
//(DONE) SHOW SPINNING LOADER WHILE CONNECTING TO DB ON TIMER AFTER USER LOGS IN
//(DONE) AXIOS REQUEST SETINTERVAL UNTIL DB SERVER IS ONLINE FOR TIMER
//(DONE) CANCEL AXIOS REQUESTS ON WINDOW CHANGE FOR TIMER
//(DONE) CREATE NEWUSER.JS TO POST A NEW USER
//(DONE) CONNECT POMODORO-SERVER GIT REPO TO HEROKU
//(DONE) HOST JSON-SERVER ON HEROKU
//(DONE) CONNECT APP TO HEROKU SERVER
//(DONE) HOST REACT APP ON NETLIFY
//(DONE) FIX RELOADING PAGE ERROR WHEN ON A ROUTE LINK
//(DONE) SHOW SPINNING LOADER BEFORE UNITY IS LOADED
//(DONE) FIX PET SIZE NOT MATCHING TO DB ON MOUNT 
//(DONE) FIX SPINNING LOADER FOR UNITY LOADING
//(DONE) ADD LEADERBOARDS FOR POMODORO COUNT
//(DONE) DISPLAY 10 USERS FROM LIFETIME DB
//(DONE) ADD BUTTONS TO SEE NEXT 10 USERS
//(DONE) HIDE LEFT BUTTON AT START AND HIDE RIGHT BUTTON AT END OF USERS 
//(DONE) ON BUTTON CLICK CHANGE STATE FOR AXIOS TO SET START TO +10
//(DONE) RESPONSIVE LEADERBOARDS
//(DONE) ADD TIME CHANGER ROUTE WITH ALERT ON CLICK
//(DONE) RESPONSIVE TIME CHANGER
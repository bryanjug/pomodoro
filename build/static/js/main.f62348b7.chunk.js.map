{"version":3,"sources":["components/API.js","components/Planet.js","components/Timer.js","components/StatsNavigation.js","components/DayStats.js","components/WeekStats.js","components/MonthStats.js","components/YearStats.js","components/App.js","index.js"],"names":["axios","create","baseURL","process","Planet","pomodoroLifeTime","pomodoro","setLoadingStyle","unityContext","useState","isLoaded","setIsLoaded","setDidError","setErrorMessage","useEffect","on","message","console","log","send","style","position","width","height","top","left","margin","visibility","className","devicePixelRatio","Timer","workTime","restTime","start","setStart","activity","setActivity","time","setTime","completedCount","setCompletedCount","long","setLong","setPomodoro","setPomodoroLifeTime","Date","getDate","setToday","dataLoaded","setDataLoaded","countdown","useRef","React","window","location","replace","Notification","requestPermission","resetDay","setInterval","clearInterval","a","API","get","then","response","data","count","catch","error","request","FetchInfo","payload","patch","total","currentHour","getHours","currentDay","getDay","currentMonth","getMonth","date","getFullYear","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","getCurrentDay","24","25","26","27","28","29","30","31","getCurrentMonth","fontSize","fontWeight","now","intervalDelay","autoStart","ref","renderer","hours","minutes","seconds","completed","zeroPad","onClick","current","stop","StatsNavigation","to","type","DayStats","hour","setHour","chartData","setChartData","pointRadius","setPointRadius","pointHoverRadius","setPointHoverRadius","borderWidth","setBorderWidth","setTotal","Chart","defaults","global","defaultFontColor","getTotal","chart","labels","datasets","label","backgroundColor","AsyncResponsiveChart","addEventListener","innerWidth","defaultFontSize","removeEventListener","options","responsive","maintainAspectRatio","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes","WeekStats","day","setDay","getWeek","MonthStats","getDays","YearStats","month","setMonth","getMonths","UnityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","App","nav","navigate","useNavigate","right","quitUnityInstance","handleClickOutside","event","contains","target","document","exact","path","element","src","alt","LinkToHome","LinkToStats","ReactDOM","render","querySelector"],"mappings":"gPAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAQ,GAAD,OAAKC,4C,wBCiDCC,MAjDf,YAA8E,IAA7DC,EAA4D,EAA5DA,iBAAkBC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,gBAAiBC,EAAe,EAAfA,aAC1D,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,oBAAS,GAAzC,mBAAiBG,GAAjB,WACA,EAAwCH,mBAAS,IAAjD,mBAAqBI,GAArB,WA4BA,OA1BAC,qBAAU,WACZN,EAAaO,GAAG,UAAU,WACzBJ,GAAY,MAGPH,EAAaO,GAAG,SAAS,SAAUC,GAC/BJ,GAAY,GACZC,EAAgBG,GAChBC,QAAQC,IAAIF,QAEpB,CAACR,IAGDM,qBAAU,WACFJ,IACAF,EAAaW,KAAK,gBAAiB,aAAcd,GACjDE,EAAgB,kBAErB,CAACG,IAEJI,qBAAU,WACFJ,GAAYJ,EAAW,GACvBE,EAAaW,KAAK,gBAAiB,aAAc,KAEtD,CAACT,EAAUJ,IAGV,cAAC,IAAD,CACIE,aAAcA,EACdY,MAAO,CACHC,SAAU,WACVC,MAAO,OACPC,OAAQ,OACRC,IAAK,EACLC,KAAM,EACNC,OAAQ,OACRC,WAAYjB,EAAW,UAAY,UAEvCkB,UAAU,QACVC,iBAAkB,KCyiBfC,EAnlBD,SAAC,GAAyD,IAAxDvB,EAAuD,EAAvDA,gBAAiBwB,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,SAAUxB,EAAkB,EAAlBA,aACpD,EAA0BC,oBAAS,GAAnC,mBAAOwB,EAAP,KAAcC,EAAd,KACA,EAAgCzB,mBAAS,gBAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KACA,EAAwB3B,mBAASsB,GAAjC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAA4C7B,mBAAS,GAArD,mBAAO8B,EAAP,KAAuBC,EAAvB,KACA,EAAwB/B,mBAAS,IAAjC,mBAAOgC,EAAP,KAAaC,EAAb,KACA,EAAgCjC,mBAAS,GAAzC,mBAAOH,EAAP,KAAiBqC,EAAjB,KACA,EAAgDlC,mBAAS,GAAzD,mBAAOJ,EAAP,KAAyBuC,EAAzB,KACA,EAA0BnC,oBAAS,IAAIoC,MAAOC,WAA9C,mBAAcC,GAAd,WACA,EAAoCtC,oBAAS,GAA7C,mBAAOuC,EAAP,KAAmBC,EAAnB,KACMC,EAAYC,iBAAO,MAGlBC,IAAMtC,WAAU,WACduC,OAAOC,SAASC,QAAQ,2CACvB,IAMVzC,qBAAU,WACH,iBAAkBuC,OAGvBG,aAAaC,oBAFbxC,QAAQC,IAAI,uDAKb,IAAIwC,EAAWC,aAAY,WAC1BZ,GAAS,IAAIF,MAAOC,aAClB,MAEH,OAAO,WACNc,cAAcF,MAEb,IAGH5C,qBAAU,WACQ,iBAAbqB,GACH,IAAIqB,aAAa,8BAED,iBAAbrB,GACH,IAAIqB,aAAa,iCAEhB,CAACrB,IAGJrB,qBAAU,WAKS,IAHFR,EAAW,IAIT,iBAAb6B,IACHG,EAAmB,EAAXN,GACRU,EAAQ,SAEQ,iBAAbP,IACHG,EAAQP,GACRW,EAAQ,QAGR,CAACpC,EAAU6B,IAGXrB,qBAAU,WAAM,4CACZ,sBAAA+C,EAAA,sDACIC,EAAIC,IAAJ,UACCC,MAAK,SAASC,GACXrB,EAAoBqB,EAASC,KAAK,GAAGC,OACrClB,GAAc,MAEjBmB,OAAM,SAAUC,GACTA,EAAMJ,UACNhD,QAAQC,IAAImD,EAAMJ,UAElBI,EAAMC,SACNrD,QAAQC,IAAImD,EAAMC,YAX9B,4CADY,uBAAC,WAAD,wBAgBlBC,KACE,IAGAzD,qBAAU,WA0HW,IAAbR,IAxHAwD,EAAIC,IAAJ,UACKC,MAAK,SAAUC,GACZ,IACIE,EADUF,EAASC,KAAK,GAAGC,MACT,EAEtBvB,EAAoBuB,GAEpB,IAAIK,EAAU,CAAEL,MAAOA,GAEvBL,EAAIW,MAAJ,WAAsBD,MAGzBJ,OAAM,SAAUC,GACTA,EAAMJ,UACNhD,QAAQC,IAAImD,EAAMJ,UAElBI,EAAMC,SACNrD,QAAQC,IAAImD,EAAMC,YAG9BR,EAAIC,IAAJ,QACKC,MAAK,SAAUC,GACZ,IACIS,EADUT,EAASC,KAAK,GAAGQ,MACT,EAElBC,GAAc,IAAI9B,MAAO+B,WAEzBT,EADiBF,EAASC,KAAK,GAAIS,GACV,EAEzBH,EAAO,aACPE,MAAOA,GACNC,EAAcR,GAGnBL,EAAIW,MAAJ,SAAoBD,MAGvBJ,OAAM,SAAUC,GACTA,EAAMJ,UACNhD,QAAQC,IAAImD,EAAMJ,UAElBI,EAAMC,SACNrD,QAAQC,IAAImD,EAAMC,YAG9BR,EAAIC,IAAJ,SACKC,MAAK,SAAUC,GACZ,IACIS,EADUT,EAASC,KAAK,GAAGQ,MACT,EAElBG,GAAa,IAAIhC,MAAOiC,SAExBX,EADgBF,EAASC,KAAK,GAAIW,GACV,EAExBL,EAAO,aACPE,MAAOA,GACNG,EAAaV,GAGlBL,EAAIW,MAAJ,UAAqBD,MAExBJ,OAAM,SAAUC,GACTA,EAAMJ,UACNhD,QAAQC,IAAImD,EAAMJ,UAElBI,EAAMC,SACNrD,QAAQC,IAAImD,EAAMC,YAG9BR,EAAIC,IAAJ,UACKC,MAAK,SAAUC,GACZ,IACIS,EADUT,EAASC,KAAK,GAAGQ,MACT,EAElBG,GAAa,IAAIhC,MAAOC,UAExBqB,EADgBF,EAASC,KAAK,GAAIW,GACV,EAExBL,EAAO,aACPE,MAAOA,GACNG,EAAaV,GAGlBL,EAAIW,MAAJ,WAAsBD,MAGzBJ,OAAM,SAAUC,GACTA,EAAMJ,UACNhD,QAAQC,IAAImD,EAAMJ,UAElBI,EAAMC,SACNrD,QAAQC,IAAImD,EAAMC,YAG9BR,EAAIC,IAAJ,SACKC,MAAK,SAAUC,GACZ,IACIS,EADUT,EAASC,KAAK,GAAGQ,MACT,EAEhBK,GAAe,IAAIlC,MAAOmC,WAE5Bb,EADkBF,EAASC,KAAK,GAAIa,GACV,EAE1BP,EAAO,aACPE,MAAOA,GACNK,EAAeZ,GAGpBL,EAAIW,MAAJ,UAAqBD,MAGxBJ,OAAM,SAAUC,GACTA,EAAMJ,UACNhD,QAAQC,IAAImD,EAAMJ,UAElBI,EAAMC,SACNrD,QAAQC,IAAImD,EAAMC,eAOtC,CAAChE,IAGDQ,qBAAU,WAEFgD,EAAIC,IAAJ,QACKC,MAAK,SAAUC,GACZ,IAAIgB,GACA,IAAIpC,MAAOmC,WAAa,EACtB,KACF,IAAInC,MAAOC,UACX,KACA,IAAID,MAAOqC,cAKf,GAAID,IAHUhB,EAASC,KAAK,GAAGe,KAGT,CAClB,IAAIT,EAAU,CACVE,MAAO,EACPO,KAAMA,EACNE,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAER5C,EAAIW,MAAJ,SAAoBD,OAQhCV,EAAIC,IAAJ,SACKC,MAAK,SAAUC,GACZ,IAAIY,GAAa,IAAIhC,MAAOiC,SAExB6B,EAAgB1C,EAASC,KAAK,GAAGW,WAGrC,GAAmB,IAAfA,GAAoBA,IAAe8B,EAAe,CAClD,IAAInC,EAAU,CACVE,MAAO,EACPG,WAAYA,EACZM,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAEP3B,EAAIW,MAAJ,UAAqBD,OAQjCV,EAAIC,IAAJ,UACKC,MAAK,SAAUC,GACZ,IAAIY,GAAa,IAAIhC,MAAOC,UACxB6D,EAAgB1C,EAASC,KAAK,GAAGW,WAGrC,GAAmB,IAAfA,GAAoBA,IAAe8B,EAAe,CAClD,IAAInC,EAAU,CACVE,MAAO,EACPG,WAAYA,EACZO,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJE,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAERrD,EAAIW,MAAJ,WAAsBD,OAOlCV,EAAIC,IAAJ,SACKC,MAAK,SAAUC,GACZ,IAAMc,GAAe,IAAIlC,MAAOmC,WAE5BoC,EAAkBnD,EAASC,KAAK,GAAGa,aAGvC,GAAqB,IAAjBA,GAAsBA,IAAiBqC,EAAiB,CACxD,IAAI5C,EAAU,CACVE,MAAO,EACPK,aAAcA,EACdI,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,GAAI,EACJC,GAAI,GAERhC,EAAIW,MAAJ,UAAqBD,SAKtC,IAsDN1D,qBAAU,YACU,IAAfkC,GACHzC,EAAgB,wBAEE,IAAfyC,GACHzC,EAAgB,qCAEf,CAACyC,IA8HJ,OACC,gCACC,qBAAKpB,UAAU,gCAAf,SACC,mBAAGA,UAAU,6BAAb,SAA2CvB,MAE5C,qBAAKuB,UAAU,oBAAf,SACC,sBAAKA,UAAU,cAAf,UACC,sBAAKA,UAAU,sBAAf,UACEa,EADF,IACSN,KAET,sBAAKP,UAAU,qBAAf,UACC,mBACCR,MAAO,CAAEiG,SAAU,OAAQC,WAAY,OACvC1F,UAAU,uBAFX,SAIC,cAAC,IAAD,CACCqD,KAAMpC,KAAK0E,MAAQlF,EACnBmF,cAAe,EACfC,WAAW,EACXC,IAAKxE,EACLyE,SApCU,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QACnC,OAD4D,EAAhBC,WAG3CvF,EAAkBD,EAAiB,GAzEb,IAAnBA,EAEF,iCACED,EAAQN,GACRE,GAAS,GACTE,EAAY,mBAIO,IAAnBG,EAEF,iCACED,EAAQN,GACRE,GAAS,GACTS,EAAYrC,EAAW,GACvB8B,EAAY,mBAIO,IAAnBG,EAGF,iCACED,EAAQN,GACRE,GAAS,GACTE,EAAY,mBAIO,IAAnBG,EAEF,iCACED,EAAQP,GACRG,GAAS,GACTE,EAAY,mBAIO,IAAnBG,EAEF,iCACED,EAAQP,GACRG,GAAS,GACTS,EAAYrC,EAAW,GACvB8B,EAAY,mBAIO,IAAnBG,EAEF,iCACED,EAAQN,GACRE,GAAS,GACTE,EAAY,mBAIO,IAAnBG,EAEF,iCACED,EAAQN,GACRE,GAAS,GACTE,EAAY,gBACZI,EAAkB,WANtB,GAsBE,iCACEwF,YAAQJ,EAAO,GADjB,IACsBI,YAAQH,EAAS,GADvC,IAC4CG,YAAQF,EAAS,YA1GjD,IAAV7F,EAGF,aADA,CACA,UACCL,UAAU,8CACVqG,QAAS,kBAfZ/F,GAAS,QACTgB,EAAUgF,QAAQjG,SAYhB,oBAQY,IAAVA,EAGF,aADA,CACA,UACCL,UAAU,8CACVqG,QAAS,kBArBZ/F,GAAS,QACTgB,EAAUgF,QAAQC,QAkBhB,uBAHF,EA6HI,+BAIM,cAAC,EAAD,CACI9H,iBAAkBA,EAClBC,SAAUA,EACVC,gBAAiBA,EACjBC,aAAcA,Q,eC7jBf4H,EAnBS,WACpB,OACI,sBAAKxG,UAAU,0CAAf,UACI,cAAC,IAAD,CAAMyG,GAAG,aAAT,SACI,wBAAQC,KAAK,SAAS1G,UAAU,wDAAhC,mBAEJ,cAAC,IAAD,CAAMyG,GAAG,cAAT,SACI,wBAAQC,KAAK,SAAS1G,UAAU,oCAAhC,oBAEJ,cAAC,IAAD,CAAMyG,GAAG,eAAT,SACI,wBAAQC,KAAK,SAAS1G,UAAU,oCAAhC,qBAEJ,cAAC,IAAD,CAAMyG,GAAG,cAAT,SACI,wBAAQC,KAAK,SAAS1G,UAAU,yDAAhC,wBCkOD2G,EA5OE,SAAC,GAAuB,IAAtBhI,EAAqB,EAArBA,gBAClB,EAAwBE,mBAAS,IAAjC,mBAAO+H,EAAP,KAAaC,EAAb,KACA,EAAkChI,mBAAS,IAA3C,mBAAOiI,EAAP,KAAkBC,EAAlB,KACA,EAAsClI,mBAAS,GAA/C,mBAAOmI,EAAP,KAAoBC,EAApB,KACA,EAAgDpI,mBAAS,GAAzD,mBAAOqI,EAAP,KAAyBC,EAAzB,KACA,EAAsCtI,mBAAS,GAA/C,mBAAOuI,EAAP,KAAoBC,EAApB,KACA,EAA0BxI,mBAAS,GAAnC,mBAAOiE,EAAP,KAAcwE,EAAd,KACA,EAAoCzI,oBAAS,GAA7C,mBAAOuC,EAAP,KAAmBC,EAAnB,KACAkG,QAAMC,SAASC,OAAOC,iBAAmB,UAGtCxI,qBAAU,WACNgD,EAAIC,IAAJ,QACHC,MAAK,SAAUC,GACJ,IAAIW,EAAWX,EAASC,KAAK,GACzBqF,EAAWtF,EAASC,KAAK,GAAGQ,MAEhC+D,EAAQ7D,GACpBsE,EAASK,GACTtG,GAAc,GACF1C,EAAgB,kBAEnB6D,OAAM,SAAUC,GACTA,EAAMJ,UACNhD,QAAQC,IAAImD,EAAMJ,UAElBI,EAAMC,SACNrD,QAAQC,IAAImD,EAAMC,cAG/B,IAGNxD,qBAAU,WACT0I,MACE,CAACxG,EAAY4F,IAEhB,IAAMY,EAAQ,WACbb,EAAa,CACZc,OAAQ,CACP,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEDC,SAAU,CACT,CACCC,MAAO,sBACPzF,KAAM,CACLsE,EAAK,GACLA,EAAK,GACLA,EAAK,GACLA,EAAK,GACLA,EAAK,GACLA,EAAK,GACLA,EAAK,GACLA,EAAK,GACLA,EAAK,GACLA,EAAK,GACLA,EAAK,IACLA,EAAK,IACLA,EAAK,IACLA,EAAK,IACLA,EAAK,IACLA,EAAK,IACLA,EAAK,IACLA,EAAK,IACLA,EAAK,IACLA,EAAK,IACLA,EAAK,IACLA,EAAK,IACLA,EAAK,IACLA,EAAK,KAENoB,gBAAiB,CAAC,WAClBZ,YAAaA,EACbJ,YAAaA,EACbE,iBAAkBA,OAOhBe,EAAuB,WAC5BxG,OAAOyG,iBAAiB,UAAU,WAC7BzG,OAAO0G,WAAa,OACvBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,OACxBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,IACfE,EAAoB,IACpBE,EAAe,SAuDlB,OATAnI,qBAAU,WAIT,OAHA+I,IAxCIxG,OAAO0G,WAAa,OACvBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,OACxBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,IACfE,EAAoB,IACpBE,EAAe,KAST,WACN5F,OAAO4G,oBAAoB,SAAUJ,MAEpC,IAGF,gCACC,cAAC,EAAD,IACA,qBAAKjI,UAAU,QAAQR,MAAO,CAAEE,MAAO,OAAQC,OAAQ,QAAvD,SACC,cAAC,OAAD,CACC2C,KAAMwE,EACNwB,QAAS,CACRC,YAAY,EACZC,qBAAqB,EACrBC,MAAO,CACNC,KAAK,cAAD,OAAgB5F,GACpB6F,SAAS,GAEVC,OAAQ,CACPC,MAAO,CACN,CACCC,MAAO,CACNC,UAAU,EACVC,cAAe,GACfC,aAAa,GAEdC,UAAW,CACVP,SAAS,KAIZQ,MAAO,CACN,CACCD,UAAW,CACVP,SAAS,eCzBJS,EAvMG,SAAC,GAAuB,IAAtBzK,EAAqB,EAArBA,gBACnB,EAAsBE,mBAAS,IAA/B,mBAAOwK,EAAP,KAAYC,EAAZ,KACA,EAAkCzK,mBAAS,IAA3C,mBAAOiI,EAAP,KAAkBC,EAAlB,KACA,EAAsClI,mBAAS,GAA/C,mBAAOmI,EAAP,KAAoBC,EAApB,KACA,EAAgDpI,mBAAS,GAAzD,mBAAOqI,EAAP,KAAyBC,EAAzB,KACA,EAAsCtI,mBAAS,GAA/C,mBAAOuI,EAAP,KAAoBC,EAApB,KACA,EAA0BxI,mBAAS,GAAnC,mBAAOiE,EAAP,KAAcwE,EAAd,KACA,EAAoCzI,oBAAS,GAA7C,mBAAOuC,EAAP,KAAmBC,EAAnB,KACAkG,QAAMC,SAASC,OAAOC,iBAAmB,UAGtCxI,qBAAU,WACNgD,EAAIC,IAAJ,SACHC,MAAK,SAAUC,GACJ,IAAIkH,EAAUlH,EAASC,KAAK,GACxBqF,EAAWtF,EAASC,KAAK,GAAGQ,MAEhCwG,EAAOC,GACnBjC,EAASK,GACTtG,GAAc,GACF1C,EAAgB,kBAEnB6D,OAAM,SAAUC,GACTA,EAAMJ,UACNhD,QAAQC,IAAImD,EAAMJ,UAElBI,EAAMC,SACNrD,QAAQC,IAAImD,EAAMC,cAG/B,IAGNxD,qBAAU,WACT0I,MACE,CAACxG,EAAY4F,IAEhB,IAAMY,EAAQ,WACbb,EAAa,CACZc,OAAQ,CACP,SACA,SACA,UACA,YACA,WACA,SACA,YAEDC,SAAU,CACT,CACCC,MAAO,sBACPzF,KAAM,CACL+G,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,IAELrB,gBAAiB,CAAC,WAClBZ,YAAaA,EACbJ,YAAaA,EACbE,iBAAkBA,OAOhBe,EAAuB,WAC5BxG,OAAOyG,iBAAiB,UAAU,WAC7BzG,OAAO0G,WAAa,OACvBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,OACxBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,IACfE,EAAoB,IACpBE,EAAe,SAuDlB,OATAnI,qBAAU,WAIT,OAHA+I,IAxCIxG,OAAO0G,WAAa,OACvBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,OACxBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,IACfE,EAAoB,IACpBE,EAAe,KAST,WACN5F,OAAO4G,oBAAoB,SAAUJ,MAEpC,IAGF,gCACC,cAAC,EAAD,IACA,qBAAKjI,UAAU,QAAQR,MAAO,CAAEE,MAAO,OAAQC,OAAQ,QAAvD,SACC,cAAC,OAAD,CACC2C,KAAMwE,EACNwB,QAAS,CACRC,YAAY,EACZC,qBAAqB,EACrBC,MAAO,CAAEC,KAAK,eAAD,OAAiB5F,GAAS6F,SAAS,GAChDC,OAAQ,CACPC,MAAO,CACN,CACCC,MAAO,CACNC,UAAU,EACVC,cAAe,GACfC,aAAa,GAEdC,UAAW,CACVP,SAAS,KAIZQ,MAAO,CACN,CACCD,UAAW,CACVP,SAAS,eC4DJa,EAvPI,SAAC,GAAuB,IAAtB7K,EAAqB,EAArBA,gBACpB,EAAkCE,mBAAS,IAA3C,mBAAOiI,EAAP,KAAkBC,EAAlB,KACA,EAAsBlI,mBAAS,IAA/B,mBAAOwK,EAAP,KAAYC,EAAZ,KACA,EAAsCzK,mBAAS,GAA/C,mBAAOmI,EAAP,KAAoBC,EAApB,KACA,EAAgDpI,mBAAS,GAAzD,mBAAOqI,EAAP,KAAyBC,EAAzB,KACA,EAAsCtI,mBAAS,GAA/C,mBAAOuI,EAAP,KAAoBC,EAApB,KACA,EAA0BxI,mBAAS,GAAnC,mBAAOiE,EAAP,KAAcwE,EAAd,KACA,EAAoCzI,oBAAS,GAA7C,mBAAOuC,EAAP,KAAmBC,EAAnB,KACAkG,QAAMC,SAASC,OAAOC,iBAAmB,UAGtCxI,qBAAU,WACNgD,EAAIC,IAAJ,UACHC,MAAK,SAAUC,GACJ,IAAIoH,EAAUpH,EAASC,KAAK,GACxBqF,EAAWtF,EAASC,KAAK,GAAGQ,MAEhCwG,EAAOG,GACnBnC,EAASK,GACTtG,GAAc,GACF1C,EAAgB,kBAEnB6D,OAAM,SAAUC,GACTA,EAAMJ,UACNhD,QAAQC,IAAImD,EAAMJ,UAElBI,EAAMC,SACNrD,QAAQC,IAAImD,EAAMC,cAG/B,IAGNxD,qBAAU,WACT0I,MACE,CAACxG,EAAY4F,IAEhB,IAAMY,EAAQ,WACbb,EAAa,CACZc,OAAQ,CACP,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACY,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEbC,SAAU,CACT,CACCC,MAAO,sBACPzF,KAAM,CACL+G,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACcA,EAAI,IACJA,EAAI,IACtBA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,IACJA,EAAI,KAELrB,gBAAiB,CAAC,WAClBZ,YAAaA,EACbJ,YAAaA,EACbE,iBAAkBA,OAOhBe,EAAuB,WAC5BxG,OAAOyG,iBAAiB,UAAU,WAC7BzG,OAAO0G,WAAa,OACvBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,OACxBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,IACfE,EAAoB,IACpBE,EAAe,SAuDlB,OATAnI,qBAAU,WAIT,OAHA+I,IAxCIxG,OAAO0G,WAAa,OACvBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,OACxBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,IACfE,EAAoB,IACpBE,EAAe,KAST,WACN5F,OAAO4G,oBAAoB,SAAUJ,MAEpC,IAGF,gCACU,cAAC,EAAD,IACA,qBAAKjI,UAAU,QAAQR,MAAO,CAACE,MAAO,OAAQC,OAAQ,QAAtD,SACI,cAAC,OAAD,CACI2C,KAAMwE,EACNwB,QAAS,CACvBC,YAAY,EACZC,qBAAqB,EACHC,MAAO,CAAEC,KAAK,gBAAD,OAAkB5F,GAAS6F,SAAS,GACjDC,OAAQ,CACJC,MAAO,CACH,CACIC,MAAO,CACHC,UAAU,EACVC,cAAe,GACfC,aAAa,GAEjBC,UAAW,CACPP,SAAS,KAIrBQ,MAAO,CACH,CACID,UAAW,CACPP,SAAS,eC1BlCe,EAjNG,SAAC,GAAuB,IAAtB/K,EAAqB,EAArBA,gBACnB,EAAkCE,mBAAS,IAA3C,mBAAOiI,EAAP,KAAkBC,EAAlB,KACA,EAA0BlI,mBAAS,IAAnC,mBAAO8K,EAAP,KAAcC,EAAd,KACA,EAAsC/K,mBAAS,GAA/C,mBAAOmI,EAAP,KAAoBC,EAApB,KACA,EAAgDpI,mBAAS,GAAzD,mBAAOqI,EAAP,KAAyBC,EAAzB,KACA,EAAsCtI,mBAAS,GAA/C,mBAAOuI,EAAP,KAAoBC,EAApB,KACA,EAA0BxI,mBAAS,GAAnC,mBAAOiE,EAAP,KAAcwE,EAAd,KACA,EAAoCzI,oBAAS,GAA7C,mBAAOuC,EAAP,KAAmBC,EAAnB,KACAkG,QAAMC,SAASC,OAAOC,iBAAmB,UAGtCxI,qBAAU,WACNgD,EAAIC,IAAJ,SACKC,MAAK,SAAUC,GACZ,IAAIwH,EAAYxH,EAASC,KAAK,GAC1BqF,EAAWtF,EAASC,KAAK,GAAGQ,MAEhC8G,EAASC,GACTvC,EAASK,GACTtG,GAAc,GACd1C,EAAgB,kBAEnB6D,OAAM,SAAUC,GACTA,EAAMJ,UACNhD,QAAQC,IAAImD,EAAMJ,UAElBI,EAAMC,SACNrD,QAAQC,IAAImD,EAAMC,cAG/B,IAGNxD,qBAAU,WACT0I,MACE,CAACxG,EAAY4F,IAEhB,IAAMY,EAAQ,WACbb,EAAa,CACZc,OAAQ,CACP,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,MAEDC,SAAU,CACT,CACCC,MAAO,sBACPzF,KAAM,CACLqH,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IACNA,EAAM,KAEP3B,gBAAiB,CAAC,WAClBZ,YAAaA,EACbJ,YAAaA,EACbE,iBAAkBA,OAOhBe,EAAuB,WAC5BxG,OAAOyG,iBAAiB,UAAU,WAC7BzG,OAAO0G,WAAa,OACvBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,OACxBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,IACfE,EAAoB,IACpBE,EAAe,SAuDlB,OATAnI,qBAAU,WAIT,OAHA+I,IAxCIxG,OAAO0G,WAAa,OACvBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,MAAQ1G,OAAO0G,WAAa,OACpDZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,GACfE,EAAoB,GACpBE,EAAe,IAEZ5F,OAAO0G,YAAc,OACxBZ,QAAMC,SAASC,OAAOW,gBAAkB,GACxCnB,EAAe,IACfE,EAAoB,IACpBE,EAAe,KAST,WACN5F,OAAO4G,oBAAoB,SAAUJ,MAEpC,IAGF,gCACU,cAAC,EAAD,IACA,qBAAKjI,UAAU,QAAQR,MAAO,CAACE,MAAO,OAAQC,OAAQ,QAAtD,SACI,cAAC,OAAD,CACI2C,KAAMwE,EACNwB,QAAS,CACvBC,YAAY,EACZC,qBAAqB,EACHC,MAAO,CAAEC,KAAK,eAAD,OAAiB5F,GAAS6F,SAAS,GAChDC,OAAQ,CACJC,MAAO,CACH,CACIC,MAAO,CACHC,UAAU,EACVC,cAAe,GACfC,aAAa,GAEjBC,UAAW,CACPP,SAAS,KAIrBQ,MAAO,CACH,CACID,UAAW,CACPP,SAAS,eC9L3C/J,EAAe,IAAIkL,eAAa,CAClCC,UAAW,wBACXC,QAAS,mBACTC,aAAc,2BACdC,QAAS,qBAsHEC,EAnHH,WACX,IAO2BrE,EAP3B,EAAwCjH,mBAAS,gDAAjD,mBAAqBF,GAArB,WACA,EAAgCE,mBAAS,MAAzC,mBAAOsB,EAAP,KACA,GADA,KACgCtB,mBAAS,MAAzC,mBAAOuB,EAAP,KACMgK,GADN,KACY7I,iBAAO,OACV8I,EAAWC,cALH,4CAoCd,sBAAArI,EAAA,sDACImI,EAAI9D,QAAQ9G,MAAM+K,MAAQ,OAC1BF,EAAS,KAFb,4CApCc,kEAyCd,sBAAApI,EAAA,6DACImI,EAAI9D,QAAQ9G,MAAM+K,MAAQ,OAD9B,SAGU3L,EAAa4L,oBAHvB,OAIIH,EAAS,cAJb,4CAzCc,sBAgDjB,OAxC2BvE,EAkBTsE,EAjBjBlL,qBAAU,WACT,SAASuL,EAAmBC,GACvB5E,EAAIQ,UAAYR,EAAIQ,QAAQqE,SAASD,EAAME,SAAuC,QAA5BR,EAAI9D,QAAQ9G,MAAM+K,QAC3EH,EAAI9D,QAAQ9G,MAAM+K,MAAQ,QAM5B,OADAM,SAAS3C,iBAAiB,YAAauC,GAChC,WAENI,SAASxC,oBAAoB,YAAaoC,MAGzC,CAAC3E,IA0BJ,gCACU,eAAC,IAAD,WACI,cAAC,IAAD,CACIgF,OAAK,EAACC,KAAK,IACXC,QACI,cAAC,EAAD,CACIrM,gBAAiBA,EACjByB,SAAUA,EACVD,SAAUA,EACVvB,aAAcA,MAI1B,cAAC,IAAD,CACImM,KAAK,aACLC,QACI,cAAC,EAAD,CACIrM,gBAAiBA,MAI7B,cAAC,IAAD,CACIoM,KAAK,cACLC,QACI,cAAC,EAAD,CACIrM,gBAAiBA,MAI7B,cAAC,IAAD,CACIoM,KAAK,eACLC,QACI,cAAC,EAAD,CACIrM,gBAAiBA,MAI7B,cAAC,IAAD,CACIoM,KAAK,cACLC,QACI,cAAC,EAAD,CACIrM,gBAAiBA,SAKjC,qBAAKqB,UAAU,QAAf,SACI,qBAAKA,UAAU,WAAWiL,IAAI,qBAAqB5E,QApElE,WACC+D,EAAI9D,QAAQ9G,MAAM+K,MAAQ,OAmEyDW,IAAI,OAE7E,sBAAKlL,UAAU,OAAO8F,IAAKsE,EAA3B,UACI,qBAAKpK,UAAU,aAAf,SACI,qBAAKiL,IAAI,gBAAgB5E,QApE5C,WACC+D,EAAI9D,QAAQ9G,MAAM+K,MAAQ,QAmEmCvK,UAAU,YAAYkL,IAAI,OAEzE,+BACI,wBAAQ7E,QAAS,kBAvGnB,0CAuGyB8E,IAAvB,SACI,4CAEJ,wBAAQ9E,QAAS,kBA1GnB,0CA0GyB+E,IAAvB,SACI,wD,OCtHxBC,IAASC,OACL,cAAC,IAAD,UACI,cAAC,EAAD,MAEJT,SAASU,cAAc,Y","file":"static/js/main.f62348b7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: `${process.env.REACT_APP_NODE_SERVER}`\r\n});","import React, {useEffect, useState} from \"react\";\r\nimport Unity from \"react-unity-webgl\";\r\n\r\nfunction Planet({pomodoroLifeTime, pomodoro, setLoadingStyle, unityContext}) {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [didError, setDidError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\t\tunityContext.on(\"loaded\", () => {\r\n\t\t\tsetIsLoaded(true);\r\n\t\t});\r\n\r\n        unityContext.on(\"error\", function (message) {\r\n            setDidError(true);\r\n            setErrorMessage(message);\r\n            console.log(message)\r\n        });\r\n\t}, [unityContext]);\r\n\r\n    //load total amount of trees from server\r\n    useEffect(()=> {\r\n        if (isLoaded) {\r\n            unityContext.send(\"lowpoly_earth\", \"SpawnTrees\", pomodoroLifeTime);\r\n            setLoadingStyle(\"displayNone\");\r\n        }\r\n    }, [isLoaded])\r\n\r\n    useEffect(()=> {\r\n        if (isLoaded && pomodoro > 0) {\r\n            unityContext.send(\"lowpoly_earth\", \"SpawnTrees\", 1);\r\n        }\r\n    }, [isLoaded, pomodoro])\r\n    \r\n    return (\r\n        <Unity \r\n            unityContext={unityContext}\r\n            style={{\r\n                position: \"absolute\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                top: 0,\r\n                left: 0,\r\n                margin: \"auto\",\r\n                visibility: isLoaded ? \"visible\" : \"hidden\",\r\n            }}\r\n            className=\"unity\"\r\n            devicePixelRatio={2}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Planet;","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Countdown, { zeroPad } from \"react-countdown\";\r\nimport API from './API';\r\nimport Planet from \"./Planet\";\r\n\r\nconst Timer = ({setLoadingStyle, workTime, restTime, unityContext}) => {\r\n\tconst [start, setStart] = useState(false);\r\n\tconst [activity, setActivity] = useState(\"Working Mode\");\r\n\tconst [time, setTime] = useState(workTime);\r\n\tconst [completedCount, setCompletedCount] = useState(0);\r\n\tconst [long, setLong] = useState(\"\");\r\n\tconst [pomodoro, setPomodoro] = useState(0);\r\n\tconst [pomodoroLifeTime, setPomodoroLifeTime] = useState(0);\r\n\tconst [today, setToday] = useState(new Date().getDate());\r\n\tconst [dataLoaded, setDataLoaded] = useState(false);\r\n\tconst countdown = useRef(null);\r\n\r\n    const RedirectPage = () => {\r\n        React.useEffect(() => {\r\n          window.location.replace('https://pomodoro-planting.netlify.app')\r\n        }, [])\r\n    }\r\n\r\n    RedirectPage()\r\n\r\n\t//ask user permission for notifications\r\n\tuseEffect(() => {\r\n\t\tif (!(\"Notification\" in window)) {\r\n\t\t\tconsole.log(\"This browser does not support desktop notifications\");\r\n\t\t} else {\r\n\t\t\tNotification.requestPermission();\r\n\t\t}\r\n\t\t//resets state every hour in case user is still in app once day changes\r\n\t\tlet resetDay = setInterval(() => {\r\n\t\t\tsetToday(new Date().getDate());\r\n\t\t}, 3600000);\r\n\r\n\t\treturn () => {\r\n\t\t\tclearInterval(resetDay);\r\n\t\t}\r\n\t}, []);\r\n\r\n\t//show notification once timer is done\r\n\tuseEffect(() => {\r\n\t\tif (activity === \"Resting Mode\") {\r\n\t\t\tnew Notification(\"It's time to take a break!\");\r\n\t\t}\r\n\t\tif (activity === \"Working Mode\") {\r\n\t\t\tnew Notification(\"It's time to start working!\");\r\n\t\t}\r\n\t}, [activity]);\r\n\r\n\t//long resting mode checker\r\n\tuseEffect(() => {\r\n\t\t//checks to see if number is multiple of 5\r\n\t\tvar remainder = pomodoro % 5;\r\n\r\n\t\t//check pomodoro multiple and set long resting mode\r\n\t\tif (remainder === 0) {\r\n\t\t\tif (activity === \"Resting Mode\") {\r\n\t\t\t\tsetTime(restTime * 3); //15 minutes\r\n\t\t\t\tsetLong(\"Long\");\r\n\t\t\t}\r\n\t\t\tif (activity === \"Working Mode\") {\r\n\t\t\t\tsetTime(workTime);\r\n\t\t\t\tsetLong(\"\");\r\n\t\t\t}\r\n\t\t}\r\n\t}, [pomodoro, activity]);\r\n\r\n    //request from server total pomodoro count and set total count at top left of homepage at page load\r\n    useEffect(() => {\r\n        async function FetchInfo() {\r\n            API.get(`/total`)\r\n            .then(function(response) {\r\n                setPomodoroLifeTime(response.data[0].count)\r\n                setDataLoaded(true)\r\n            })\r\n            .catch(function (error) {\r\n                if (error.response) {\r\n                    console.log(error.response)\r\n                }\r\n                if (error.request) {\r\n                    console.log(error.request)\r\n                }\r\n            })\r\n        }\r\n\t\tFetchInfo()\r\n\t}, []);\r\n    \r\n    //once pomodoro completed, request data from server and updates server (total, day, week, month, year)\r\n    useEffect(() => {\r\n        function updateLifeTime() {\r\n            API.get(`/total`)\r\n                .then(function (response) {\r\n                    let getData = response.data[0].count;\r\n                    let count = getData + 1;\r\n\r\n                    setPomodoroLifeTime(count);\r\n\r\n                    let payload = { count: count };\r\n\r\n                    API.patch(`/total/1`, payload);\r\n                    \r\n                })\r\n                .catch(function (error) {\r\n                    if (error.response) {\r\n                        console.log(error.response)\r\n                    }\r\n                    if (error.request) {\r\n                        console.log(error.request)\r\n                    }\r\n                });\r\n            API.get(`/day`)\r\n                .then(function (response) {\r\n                    let getData = response.data[0].total;\r\n                    let total = getData + 1;\r\n\r\n                    let currentHour = new Date().getHours();\r\n                    let getCurrentHour = response.data[0].[currentHour];\r\n                    let count = getCurrentHour + 1;\r\n\r\n                    let payload = { \r\n                        total: total, \r\n                        [currentHour]: count\r\n                    };\r\n\r\n                    API.patch(`/day/1`, payload);\r\n                    \r\n                })\r\n                .catch(function (error) {\r\n                    if (error.response) {\r\n                        console.log(error.response)\r\n                    }\r\n                    if (error.request) {\r\n                        console.log(error.request)\r\n                    }\r\n                });\r\n            API.get(`/week`)\r\n                .then(function (response) {\r\n                    let getData = response.data[0].total;\r\n                    let total = getData + 1;\r\n\r\n                    let currentDay = new Date().getDay();\r\n                    let getCurrentDay = response.data[0].[currentDay];\r\n                    let count = getCurrentDay + 1;\r\n\r\n                    let payload = { \r\n                        total: total,\r\n                        [currentDay]: count\r\n                    };\r\n\r\n                    API.patch(`/week/1`, payload);\r\n                })\r\n                .catch(function (error) {\r\n                    if (error.response) {\r\n                        console.log(error.response)\r\n                    }\r\n                    if (error.request) {\r\n                        console.log(error.request)\r\n                    }\r\n                });\r\n            API.get(`/month`)\r\n                .then(function (response) {\r\n                    let getData = response.data[0].total;\r\n                    let total = getData + 1;\r\n\r\n                    let currentDay = new Date().getDate(); //day of month\r\n                    let getCurrentDay = response.data[0].[currentDay];\r\n                    let count = getCurrentDay + 1;\r\n\r\n                    let payload = { \r\n                        total: total,\r\n                        [currentDay]: count\r\n                     };\r\n\r\n                    API.patch(`/month/1`, payload);\r\n                    \r\n                })\r\n                .catch(function (error) {\r\n                    if (error.response) {\r\n                        console.log(error.response)\r\n                    }\r\n                    if (error.request) {\r\n                        console.log(error.request)\r\n                    }\r\n                });\r\n            API.get(`/year`)\r\n                .then(function (response) {\r\n                    let getData = response.data[0].total;\r\n                    let total = getData + 1;\r\n\r\n                    const currentMonth = new Date().getMonth();\r\n                    let getCurrentMonth = response.data[0].[currentMonth];\r\n                    let count = getCurrentMonth + 1;\r\n\r\n                    let payload = { \r\n                        total: total,\r\n                        [currentMonth]: count\r\n                    };\r\n\r\n                    API.patch(`/year/1`, payload);\r\n                    \r\n                })\r\n                .catch(function (error) {\r\n                    if (error.response) {\r\n                        console.log(error.response)\r\n                    }\r\n                    if (error.request) {\r\n                        console.log(error.request)\r\n                    }\r\n                });\r\n        }\r\n        if (pomodoro !== 0) {\r\n            updateLifeTime()\r\n        }\r\n\t}, [pomodoro]);\r\n\r\n\t//gets api data and updates all server data back to 0 once the day changes\r\n    useEffect(() => {\r\n        function resetDay() {\r\n            API.get(`/day`)\r\n                .then(function (response) {\r\n                    let date =\r\n                        new Date().getMonth() + 1 \r\n                        + \"-\" +\r\n                        new Date().getDate() +\r\n                        \"-\" +\r\n                        new Date().getFullYear();\r\n    \r\n                    let getData = response.data[0].date;\r\n    \r\n                    //if date has changed, reset all data to 0\r\n                    if (date !== getData) {\r\n                        let payload = {\r\n                            total: 0, \r\n                            date: date, \r\n                            0: 0,\r\n                            1: 0,\r\n                            2: 0,\r\n                            3: 0,\r\n                            4: 0,\r\n                            5: 0,\r\n                            6: 0,\r\n                            7: 0,\r\n                            8: 0,\r\n                            9: 0,\r\n                            10: 0,\r\n                            11: 0,\r\n                            12: 0,\r\n                            13: 0,\r\n                            14: 0,\r\n                            15: 0,\r\n                            16: 0,\r\n                            17: 0,\r\n                            18: 0,\r\n                            19: 0,\r\n                            20: 0,\r\n                            21: 0,\r\n                            22: 0,\r\n                            23: 0\r\n                        };\r\n                        API.patch(`/day/1`, payload);\r\n                    }\r\n                });\r\n        }\r\n        resetDay()\r\n\r\n        //resets data back to 0 once week has ended\r\n        function resetWeek() {\r\n            API.get(`/week`)\r\n                .then(function (response) {\r\n                    let currentDay = new Date().getDay();\r\n\r\n                    let getCurrentDay = response.data[0].currentDay;\r\n\r\n                    // if the current day is 0 and is not the same date on the server, reset data to 0\r\n                    if (currentDay === 0 && currentDay !== getCurrentDay) {\r\n                        let payload = {\r\n                            total: 0, \r\n                            currentDay: currentDay,\r\n                            0: 0,\r\n                            1: 0,\r\n                            2: 0,\r\n                            3: 0,\r\n                            4: 0,\r\n                            5: 0,\r\n                            6: 0\r\n                        };\r\n                        API.patch(`/week/1`, payload);\r\n                    }\r\n                });\r\n        }\r\n        resetWeek()\r\n\r\n        //resets data back to 0 once month has ended\r\n        function resetMonth() {\r\n            API.get(`/month`)\r\n                .then(function (response) {\r\n                    let currentDay = new Date().getDate(); //day of month\r\n                    let getCurrentDay = response.data[0].currentDay;\r\n\r\n                    //if current day has changed to 1 and is not the same date as previously saved, reset data to 0\r\n                    if (currentDay === 1 && currentDay !== getCurrentDay) {\r\n                        let payload = {\r\n                            total: 0, \r\n                            currentDay: currentDay,\r\n                            1: 0,\r\n                            2: 0,\r\n                            3: 0,\r\n                            4: 0,\r\n                            5: 0,\r\n                            6: 0,\r\n                            7: 0,\r\n                            8: 0,\r\n                            9: 0,\r\n                            10: 0,\r\n                            11: 0,\r\n                            12: 0,\r\n                            13: 0,\r\n                            14: 0,\r\n                            15: 0,\r\n                            16: 0,\r\n                            17: 0,\r\n                            18: 0,\r\n                            19: 0,\r\n                            20: 0,\r\n                            21: 0,\r\n                            22: 0,\r\n                            23: 0,\r\n                            24: 0,\r\n                            25: 0,\r\n                            26: 0,\r\n                            27: 0,\r\n                            28: 0,\r\n                            29: 0,\r\n                            30: 0,\r\n                            31: 0\r\n                        };\r\n                        API.patch(`/month/1`, payload);\r\n                    }\r\n                });\r\n        }\r\n        resetMonth()\r\n\r\n        function resetYear() {\r\n            API.get(`/year`)\r\n                .then(function (response) {\r\n                    const currentMonth = new Date().getMonth();\r\n\r\n                    let getCurrentMonth = response.data[0].currentMonth;\r\n\r\n                    //if current month has changed to 0 and is not the same date as previously saved, reset data to 0\r\n                    if (currentMonth === 0 && currentMonth !== getCurrentMonth) {\r\n                        let payload = { \r\n                            total: 0, \r\n                            currentMonth: currentMonth,\r\n                            0: 0,\r\n                            1: 0,\r\n                            2: 0,\r\n                            3: 0,\r\n                            4: 0,\r\n                            5: 0,\r\n                            6: 0,\r\n                            7: 0,\r\n                            8: 0,\r\n                            9: 0,\r\n                            10: 0,\r\n                            11: 0\r\n                        };\r\n                        API.patch(`/year/1`, payload);\r\n                    }\r\n                });\r\n        }\r\n        resetYear()\r\n    }, [])\r\n\r\n\t//updates monthly and monthly total pomodoro count\r\n\t// function updateMonth() {\r\n\t// \tAPI.get(`/month/${userId}`)\r\n\t// \t\t.then(function (response) {\r\n\t// \t\t\tlet currentDay = new Date().getDate(); //day of month\r\n\t// \t\t\tconst date =\r\n\t// \t\t\t\tnew Date().getMonth() +\r\n\t// \t\t\t\t\"-\" +\r\n\t// \t\t\t\tnew Date().getDate() +\r\n\t// \t\t\t\t\"-\" +\r\n\t// \t\t\t\tnew Date().getFullYear();\r\n\r\n\t// \t\t\tlet getData = response.data[currentDay];\r\n\t// \t\t\tlet count = getData + 1;\r\n\r\n\t// \t\t\tlet getDataTotal = response.data.total;\r\n\t// \t\t\tlet totalCount = getDataTotal + 1;\r\n\r\n\t// \t\t\tlet payload = {\r\n\t// \t\t\t\t[currentDay]: count,\r\n\t// \t\t\t\ttotal: totalCount,\r\n\t// \t\t\t\tcurrentDay: currentDay,\r\n\t// \t\t\t\tdate: date,\r\n\t// \t\t\t};\r\n\r\n\t// \t\t\tAPI.patch(`/month/${userId}`, payload);\r\n\t// \t\t});\r\n\t// }\r\n\r\n\t//updates yearly counts and yearly total count\r\n\t// function updateYear() {\r\n\t// \tAPI.get(`/year/${userId}`)\r\n\t// \t\t.then(function (response) {\r\n\t// \t\t\tconst currentMonth = new Date().getMonth();\r\n\r\n\t// \t\t\tlet getMonth = response.data[currentMonth];\r\n\t// \t\t\tlet count = getMonth + 1;\r\n\r\n\t// \t\t\tlet getTotal = response.data.total;\r\n\t// \t\t\tlet totalCount = getTotal + 1;\r\n\r\n\t// \t\t\tlet payload = {\r\n\t// \t\t\t\t[currentMonth]: count,\r\n\t// \t\t\t\ttotal: totalCount,\r\n\t// \t\t\t\tcurrentMonth: currentMonth,\r\n\t// \t\t\t};\r\n\r\n\t// \t\t\tAPI.patch(`/year/${userId}`, payload);\r\n\t// \t\t});\r\n\t// }\r\n\r\n\t//shows spinning loader until server connected\r\n\tuseEffect(() => {\r\n\t\tif (dataLoaded === false) {\r\n\t\t\tsetLoadingStyle(\"text-center loading\");\r\n\t\t}\r\n\t\tif (dataLoaded === true) {\r\n\t\t\tsetLoadingStyle(\"text-center loading displayNone\");\r\n\t\t}\r\n\t}, [dataLoaded])\r\n\r\n\t//Starts and stops timer\r\n\tconst startButton = () => {\r\n\t\tsetStart(true);\r\n\t\tcountdown.current.start();\r\n\t};\r\n\r\n\tconst stopButton = () => {\r\n\t\tsetStart(false);\r\n\t\tcountdown.current.stop();\r\n\t};\r\n\r\n\tconst renderButton = () => {\r\n\t\tif (start === false) {\r\n\t\t\treturn (\r\n\t\t\t\t//renders start button\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-circle btn-xl cyanButton text-light\"\r\n\t\t\t\t\tonClick={() => startButton()}\r\n\t\t\t\t>\r\n\t\t\t\t\tStart\r\n\t\t\t\t</button>\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (start === true) {\r\n\t\t\treturn (\r\n\t\t\t\t//renders stop button\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-circle btn-xl cyanButton text-light\"\r\n\t\t\t\t\tonClick={() => stopButton()}\r\n\t\t\t\t>\r\n\t\t\t\t\tStop\r\n\t\t\t\t</button>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\t//Ran when timer = 00:00\r\n\tconst Work = () => {\r\n\t\tif (completedCount === 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{setTime(restTime)}\r\n\t\t\t\t\t{setStart(false)}\r\n\t\t\t\t\t{setActivity(\"Working Mode\")}\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (completedCount === 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{setTime(restTime)}\r\n\t\t\t\t\t{setStart(false)}\r\n\t\t\t\t\t{setPomodoro(pomodoro + 1)}\r\n\t\t\t\t\t{setActivity(\"Resting Mode\")}\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (completedCount === 2) {\r\n\t\t\t//finish working mode\r\n\t\t\treturn (\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{setTime(restTime)}\r\n\t\t\t\t\t{setStart(false)}\r\n\t\t\t\t\t{setActivity(\"Resting Mode\")}\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (completedCount === 3) {\r\n\t\t\treturn (\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{setTime(workTime)}\r\n\t\t\t\t\t{setStart(false)}\r\n\t\t\t\t\t{setActivity(\"Working Mode\")}\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (completedCount === 4) {\r\n\t\t\treturn (\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{setTime(workTime)}\r\n\t\t\t\t\t{setStart(false)}\r\n\t\t\t\t\t{setPomodoro(pomodoro + 1)}\r\n\t\t\t\t\t{setActivity(\"Working Mode\")}\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (completedCount === 5) {\r\n\t\t\treturn (\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{setTime(restTime)}\r\n\t\t\t\t\t{setStart(false)}\r\n\t\t\t\t\t{setActivity(\"Resting Mode\")}\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (completedCount === 6) {\r\n\t\t\treturn (\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{setTime(restTime)}\r\n\t\t\t\t\t{setStart(false)}\r\n\t\t\t\t\t{setActivity(\"Resting Mode\")}\r\n\t\t\t\t\t{setCompletedCount(3)}\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\t//Countdown Renderer\r\n\tconst Renderer = ({ hours, minutes, seconds, completed }) => {\r\n\t\tif (completed) {\r\n\t\t\t//Render a completed state\r\n\t\t\tsetCompletedCount(completedCount + 1);\r\n\r\n\t\t\treturn Work();\r\n\t\t} else {\r\n\t\t\t// Render a countdown\r\n\t\t\treturn (\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{zeroPad(hours, 2)}:{zeroPad(minutes, 2)}:{zeroPad(seconds, 2)}\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"pomodoroCounterContainer pt-3\">\r\n\t\t\t\t<p className=\"text-light pomodoroCounter\">{pomodoroLifeTime}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"pomodoroContainer\">\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t<div className=\"text-light activity\">\r\n\t\t\t\t\t\t{long} {activity}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"countdownContainer\">\r\n\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\tstyle={{ fontSize: \"500%\", fontWeight: \"100\" }}\r\n\t\t\t\t\t\t\tclassName=\"text-light countdown\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Countdown\r\n\t\t\t\t\t\t\t\tdate={Date.now() + time} //1500000 = 25:00 minutes\r\n\t\t\t\t\t\t\t\tintervalDelay={0}\r\n\t\t\t\t\t\t\t\tautoStart={false}\r\n\t\t\t\t\t\t\t\tref={countdown}\r\n\t\t\t\t\t\t\t\trenderer={Renderer}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t{renderButton()}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n            <Planet \r\n                pomodoroLifeTime={pomodoroLifeTime} \r\n                pomodoro={pomodoro} \r\n                setLoadingStyle={setLoadingStyle} \r\n                unityContext={unityContext}\r\n            />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Timer;\r\n\r\n","import {Link} from 'react-router-dom'; \r\n\r\nconst StatsNavigation = () => {\r\n    return (\r\n        <div className=\"text-center pt-4 pb-4 statsNavContainer\">\r\n            <Link to=\"/stats/day\">\r\n                <button type=\"button\" className=\"btn btn-secondary statsNavigation statsNavigationLeft\">Day</button>\r\n            </Link>\r\n            <Link to=\"/stats/week\">\r\n                <button type=\"button\" className=\"btn btn-secondary statsNavigation\">Week</button>\r\n            </Link>\r\n            <Link to=\"/stats/month\">\r\n                <button type=\"button\" className=\"btn btn-secondary statsNavigation\">Month</button>\r\n            </Link>\r\n            <Link to=\"/stats/year\">\r\n                <button type=\"button\" className=\"btn btn-secondary statsNavigation statsNavigationRight\">Year</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StatsNavigation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line, Chart } from \"react-chartjs-2\";\r\nimport API from './API';\r\nimport StatsNavigation from \"./StatsNavigation\"; \r\n\r\nconst DayStats = ({setLoadingStyle}) => {\r\n\tconst [hour, setHour] = useState({});\r\n\tconst [chartData, setChartData] = useState({});\r\n\tconst [pointRadius, setPointRadius] = useState(4);\r\n\tconst [pointHoverRadius, setPointHoverRadius] = useState(4);\r\n\tconst [borderWidth, setBorderWidth] = useState(4);\r\n\tconst [total, setTotal] = useState(0);\r\n\tconst [dataLoaded, setDataLoaded] = useState(false);\r\n\tChart.defaults.global.defaultFontColor = \"#F8F9FA\";\r\n    \r\n    //request data from server then set data for chart\r\n    useEffect(() => {\r\n        API.get(`/day`)\r\n\t \t\t.then(function (response) {\r\n                let getHours = response.data[0];\r\n                let getTotal = response.data[0].total;\r\n                \r\n                setHour(getHours);\r\n\t\t\t\tsetTotal(getTotal);\r\n\t\t\t\tsetDataLoaded(true);\r\n                setLoadingStyle(\"displayNone\")\r\n            })\r\n            .catch(function (error) {\r\n                if (error.response) {\r\n                    console.log(error.response)\r\n                }\r\n                if (error.request) {\r\n                    console.log(error.request)\r\n                }\r\n            })\r\n    }, [])\r\n    \r\n    //updates chart once data is fetched and when screen size changes\r\n\tuseEffect(() => {\r\n\t\tchart();\r\n\t}, [dataLoaded, pointRadius]);\r\n\r\n\tconst chart = () => {\r\n\t\tsetChartData({\r\n\t\t\tlabels: [\r\n\t\t\t\t\"1\",\r\n\t\t\t\t\"2\",\r\n\t\t\t\t\"3\",\r\n\t\t\t\t\"4\",\r\n\t\t\t\t\"5\",\r\n\t\t\t\t\"6\",\r\n\t\t\t\t\"7\",\r\n\t\t\t\t\"8\",\r\n\t\t\t\t\"9\",\r\n\t\t\t\t\"10\",\r\n\t\t\t\t\"11\",\r\n\t\t\t\t\"12\",\r\n\t\t\t\t\"13\",\r\n\t\t\t\t\"14\",\r\n\t\t\t\t\"15\",\r\n\t\t\t\t\"16\",\r\n\t\t\t\t\"17\",\r\n\t\t\t\t\"18\",\r\n\t\t\t\t\"19\",\r\n\t\t\t\t\"20\",\r\n\t\t\t\t\"21\",\r\n\t\t\t\t\"22\",\r\n\t\t\t\t\"23\",\r\n\t\t\t\t\"24\",\r\n\t\t\t],\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Pomodoros Completed\",\r\n\t\t\t\t\tdata: [\r\n\t\t\t\t\t\thour[0],\r\n\t\t\t\t\t\thour[1],\r\n\t\t\t\t\t\thour[2],\r\n\t\t\t\t\t\thour[3],\r\n\t\t\t\t\t\thour[4],\r\n\t\t\t\t\t\thour[5],\r\n\t\t\t\t\t\thour[6],\r\n\t\t\t\t\t\thour[7],\r\n\t\t\t\t\t\thour[8],\r\n\t\t\t\t\t\thour[9],\r\n\t\t\t\t\t\thour[10],\r\n\t\t\t\t\t\thour[11],\r\n\t\t\t\t\t\thour[12],\r\n\t\t\t\t\t\thour[13],\r\n\t\t\t\t\t\thour[14],\r\n\t\t\t\t\t\thour[15],\r\n\t\t\t\t\t\thour[16],\r\n\t\t\t\t\t\thour[17],\r\n\t\t\t\t\t\thour[18],\r\n\t\t\t\t\t\thour[19],\r\n\t\t\t\t\t\thour[20],\r\n\t\t\t\t\t\thour[21],\r\n\t\t\t\t\t\thour[22],\r\n\t\t\t\t\t\thour[23],\r\n\t\t\t\t\t],\r\n\t\t\t\t\tbackgroundColor: [\"#54AEA9\"],\r\n\t\t\t\t\tborderWidth: borderWidth,\r\n\t\t\t\t\tpointRadius: pointRadius,\r\n\t\t\t\t\tpointHoverRadius: pointHoverRadius,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t});\r\n\t};\r\n\r\n    //checks if user changes screen sizes manually and sets responsive chart\r\n\tconst AsyncResponsiveChart = () => {\r\n\t\twindow.addEventListener('resize', () => {\r\n\t\t\tif (window.innerWidth < 1781) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 12;\r\n\t\t\t\tsetPointRadius(4);\r\n\t\t\t\tsetPointHoverRadius(4);\r\n\t\t\t\tsetBorderWidth(4);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 1781 && window.innerWidth < 1900) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 15;\r\n\t\t\t\tsetPointRadius(6);\r\n\t\t\t\tsetPointHoverRadius(6);\r\n\t\t\t\tsetBorderWidth(6);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 1900 && window.innerWidth < 2137) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 18;\r\n\t\t\t\tsetPointRadius(7);\r\n\t\t\t\tsetPointHoverRadius(7);\r\n\t\t\t\tsetBorderWidth(7);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 2137 && window.innerWidth < 2850) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 20;\r\n\t\t\t\tsetPointRadius(8);\r\n\t\t\t\tsetPointHoverRadius(8);\r\n\t\t\t\tsetBorderWidth(8);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 2850 && window.innerWidth < 4275) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 25;\r\n\t\t\t\tsetPointRadius(9);\r\n\t\t\t\tsetPointHoverRadius(9);\r\n\t\t\t\tsetBorderWidth(9);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 4275) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 40;\r\n\t\t\t\tsetPointRadius(12);\r\n\t\t\t\tsetPointHoverRadius(12);\r\n\t\t\t\tsetBorderWidth(15);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//checks window size on mount and sets responsive chart\r\n\tconst MountResponsiveChart = () => {\r\n\t\tif (window.innerWidth < 1781) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 12;\r\n\t\t\tsetPointRadius(4);\r\n\t\t\tsetPointHoverRadius(4);\r\n\t\t\tsetBorderWidth(4);\r\n\t\t} \r\n\t\tif (window.innerWidth >= 1781 && window.innerWidth < 1900) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 15;\r\n\t\t\tsetPointRadius(6);\r\n\t\t\tsetPointHoverRadius(6);\r\n\t\t\tsetBorderWidth(6);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 1900 && window.innerWidth < 2137) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 18;\r\n\t\t\tsetPointRadius(7);\r\n\t\t\tsetPointHoverRadius(7);\r\n\t\t\tsetBorderWidth(7);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 2137 && window.innerWidth < 2850) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 20;\r\n\t\t\tsetPointRadius(8);\r\n\t\t\tsetPointHoverRadius(8);\r\n\t\t\tsetBorderWidth(8);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 2850 && window.innerWidth < 4275) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 25;\r\n\t\t\tsetPointRadius(9);\r\n\t\t\tsetPointHoverRadius(9);\r\n\t\t\tsetBorderWidth(9);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 4275) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 40;\r\n\t\t\tsetPointRadius(12);\r\n\t\t\tsetPointHoverRadius(12);\r\n\t\t\tsetBorderWidth(15);\r\n\t\t}\r\n\t}\r\n\r\n\t//runs responsive functions on mount and removes event listener on dismount\r\n\tuseEffect(() => {\r\n\t\tAsyncResponsiveChart();\r\n\t\tMountResponsiveChart();\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', AsyncResponsiveChart);\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<StatsNavigation />\r\n\t\t\t<div className=\"graph\" style={{ width: \"100%\", height: \"100%\" }}>\r\n\t\t\t\t<Line\r\n\t\t\t\t\tdata={chartData}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\tresponsive: true,\r\n\t\t\t\t\t\tmaintainAspectRatio: false,\r\n\t\t\t\t\t\ttitle: { \r\n\t\t\t\t\t\t\ttext: `Day Total: ${total}`,\r\n\t\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tscales: {\r\n\t\t\t\t\t\t\tyAxes: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\t\t\tautoSkip: true,\r\n\t\t\t\t\t\t\t\t\t\tmaxTicksLimit: 10,\r\n\t\t\t\t\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\txAxes: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DayStats;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line, Chart } from \"react-chartjs-2\";\r\nimport API from './API';\r\nimport StatsNavigation from \"./StatsNavigation\";\r\n\r\nconst WeekStats = ({setLoadingStyle}) => {\r\n\tconst [day, setDay] = useState({});\r\n\tconst [chartData, setChartData] = useState({});\r\n\tconst [pointRadius, setPointRadius] = useState(4);\r\n\tconst [pointHoverRadius, setPointHoverRadius] = useState(4);\r\n\tconst [borderWidth, setBorderWidth] = useState(4);\r\n\tconst [total, setTotal] = useState(0);\r\n\tconst [dataLoaded, setDataLoaded] = useState(false);\r\n\tChart.defaults.global.defaultFontColor = \"#F8F9FA\";\r\n\r\n    //request data from server then set data for chart\r\n    useEffect(() => {\r\n        API.get(`/week`)\r\n\t \t\t.then(function (response) {\r\n                let getWeek = response.data[0];\r\n                let getTotal = response.data[0].total;\r\n                \r\n                setDay(getWeek);\r\n\t\t\t\tsetTotal(getTotal);\r\n\t\t\t\tsetDataLoaded(true);\r\n                setLoadingStyle(\"displayNone\")\r\n            })\r\n            .catch(function (error) {\r\n                if (error.response) {\r\n                    console.log(error.response)\r\n                }\r\n                if (error.request) {\r\n                    console.log(error.request)\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    //updates chart once data is fetched and when screen size changes\r\n\tuseEffect(() => {\r\n\t\tchart();\r\n\t}, [dataLoaded, pointRadius]);\r\n\r\n\tconst chart = () => {\r\n\t\tsetChartData({\r\n\t\t\tlabels: [\r\n\t\t\t\t\"Sunday\",\r\n\t\t\t\t\"Monday\",\r\n\t\t\t\t\"Tuesday\",\r\n\t\t\t\t\"Wednesday\",\r\n\t\t\t\t\"Thursday\",\r\n\t\t\t\t\"Friday\",\r\n\t\t\t\t\"Saturday\",\r\n\t\t\t],\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Pomodoros Completed\",\r\n\t\t\t\t\tdata: [\r\n\t\t\t\t\t\tday[0],\r\n\t\t\t\t\t\tday[1], \r\n\t\t\t\t\t\tday[2], \r\n\t\t\t\t\t\tday[3], \r\n\t\t\t\t\t\tday[4], \r\n\t\t\t\t\t\tday[5], \r\n\t\t\t\t\t\tday[6], \r\n\t\t\t\t\t],\r\n\t\t\t\t\tbackgroundColor: [\"#54AEA9\"],\r\n\t\t\t\t\tborderWidth: borderWidth,\r\n\t\t\t\t\tpointRadius: pointRadius,\r\n\t\t\t\t\tpointHoverRadius: pointHoverRadius,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t});\r\n\t};\r\n\r\n\t//checks if user changes screen sizes manually and sets responsive chart\r\n\tconst AsyncResponsiveChart = () => {\r\n\t\twindow.addEventListener('resize', () => {\r\n\t\t\tif (window.innerWidth < 1781) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 12;\r\n\t\t\t\tsetPointRadius(4);\r\n\t\t\t\tsetPointHoverRadius(4);\r\n\t\t\t\tsetBorderWidth(4);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 1781 && window.innerWidth < 1900) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 15;\r\n\t\t\t\tsetPointRadius(6);\r\n\t\t\t\tsetPointHoverRadius(6);\r\n\t\t\t\tsetBorderWidth(6);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 1900 && window.innerWidth < 2137) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 18;\r\n\t\t\t\tsetPointRadius(7);\r\n\t\t\t\tsetPointHoverRadius(7);\r\n\t\t\t\tsetBorderWidth(7);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 2137 && window.innerWidth < 2850) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 20;\r\n\t\t\t\tsetPointRadius(8);\r\n\t\t\t\tsetPointHoverRadius(8);\r\n\t\t\t\tsetBorderWidth(8);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 2850 && window.innerWidth < 4275) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 25;\r\n\t\t\t\tsetPointRadius(9);\r\n\t\t\t\tsetPointHoverRadius(9);\r\n\t\t\t\tsetBorderWidth(9);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 4275) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 40;\r\n\t\t\t\tsetPointRadius(12);\r\n\t\t\t\tsetPointHoverRadius(12);\r\n\t\t\t\tsetBorderWidth(15);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//checks window size on mount and sets responsive chart\r\n\tconst MountResponsiveChart = () => {\r\n\t\tif (window.innerWidth < 1781) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 12;\r\n\t\t\tsetPointRadius(4);\r\n\t\t\tsetPointHoverRadius(4);\r\n\t\t\tsetBorderWidth(4);\r\n\t\t} \r\n\t\tif (window.innerWidth >= 1781 && window.innerWidth < 1900) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 15;\r\n\t\t\tsetPointRadius(6);\r\n\t\t\tsetPointHoverRadius(6);\r\n\t\t\tsetBorderWidth(6);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 1900 && window.innerWidth < 2137) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 18;\r\n\t\t\tsetPointRadius(7);\r\n\t\t\tsetPointHoverRadius(7);\r\n\t\t\tsetBorderWidth(7);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 2137 && window.innerWidth < 2850) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 20;\r\n\t\t\tsetPointRadius(8);\r\n\t\t\tsetPointHoverRadius(8);\r\n\t\t\tsetBorderWidth(8);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 2850 && window.innerWidth < 4275) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 25;\r\n\t\t\tsetPointRadius(9);\r\n\t\t\tsetPointHoverRadius(9);\r\n\t\t\tsetBorderWidth(9);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 4275) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 40;\r\n\t\t\tsetPointRadius(12);\r\n\t\t\tsetPointHoverRadius(12);\r\n\t\t\tsetBorderWidth(15);\r\n\t\t}\r\n\t}\r\n\r\n\t//runs responsive functions on mount and removes event listener on dismount\r\n\tuseEffect(() => {\r\n\t\tAsyncResponsiveChart();\r\n\t\tMountResponsiveChart();\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', AsyncResponsiveChart);\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<StatsNavigation />\r\n\t\t\t<div className=\"graph\" style={{ width: \"100%\", height: \"100%\" }}>\r\n\t\t\t\t<Line\r\n\t\t\t\t\tdata={chartData}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\tresponsive: true,\r\n\t\t\t\t\t\tmaintainAspectRatio: false,\r\n\t\t\t\t\t\ttitle: { text: `Week Total: ${total}`, display: true },\r\n\t\t\t\t\t\tscales: {\r\n\t\t\t\t\t\t\tyAxes: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\t\t\tautoSkip: true,\r\n\t\t\t\t\t\t\t\t\t\tmaxTicksLimit: 10,\r\n\t\t\t\t\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\txAxes: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default WeekStats;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line, Chart } from \"react-chartjs-2\";\r\nimport API from './API';\r\nimport StatsNavigation from \"./StatsNavigation\"; \r\n\r\nconst MonthStats = ({setLoadingStyle}) => {\r\n\tconst [chartData, setChartData] = useState({});\r\n\tconst [day, setDay] = useState({});\r\n\tconst [pointRadius, setPointRadius] = useState(4);\r\n\tconst [pointHoverRadius, setPointHoverRadius] = useState(4);\r\n\tconst [borderWidth, setBorderWidth] = useState(4);\r\n\tconst [total, setTotal] = useState(0);\r\n\tconst [dataLoaded, setDataLoaded] = useState(false);\r\n\tChart.defaults.global.defaultFontColor = \"#F8F9FA\";\r\n\r\n    //request data from server then set data for chart\r\n    useEffect(() => {\r\n        API.get(`/month`)\r\n\t \t\t.then(function (response) {\r\n                let getDays = response.data[0];\r\n                let getTotal = response.data[0].total;\r\n                \r\n                setDay(getDays);\r\n\t\t\t\tsetTotal(getTotal);\r\n\t\t\t\tsetDataLoaded(true);\r\n                setLoadingStyle(\"displayNone\")\r\n            })\r\n            .catch(function (error) {\r\n                if (error.response) {\r\n                    console.log(error.response)\r\n                }\r\n                if (error.request) {\r\n                    console.log(error.request)\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    //updates chart once data is fetched and when screen size changes\r\n\tuseEffect(() => {\r\n\t\tchart();\r\n\t}, [dataLoaded, pointRadius]);\r\n\t\r\n\tconst chart = () => {\r\n\t\tsetChartData({\r\n\t\t\tlabels: [\r\n\t\t\t\t\"1\",\r\n\t\t\t\t\"2\",\r\n\t\t\t\t\"3\",\r\n\t\t\t\t\"4\",\r\n\t\t\t\t\"5\",\r\n\t\t\t\t\"6\",\r\n\t\t\t\t\"7\",\r\n\t\t\t\t\"8\",\r\n\t\t\t\t\"9\",\r\n\t\t\t\t\"10\",\r\n\t\t\t\t\"11\",\r\n\t\t\t\t\"12\",\r\n\t\t\t\t\"13\",\r\n\t\t\t\t\"14\",\r\n\t\t\t\t\"15\",\r\n\t\t\t\t\"16\",\r\n\t\t\t\t\"17\",\r\n\t\t\t\t\"18\",\r\n\t\t\t\t\"19\",\r\n\t\t\t\t\"20\",\r\n\t\t\t\t\"21\",\r\n\t\t\t\t\"22\",\r\n\t\t\t\t\"23\",\r\n                \"24\",\r\n                \"25\",\r\n                \"26\",\r\n                \"27\",\r\n                \"28\",\r\n                \"29\",\r\n                \"30\",\r\n                \"31\",\r\n\t\t\t],\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Pomodoros Completed\",\r\n\t\t\t\t\tdata: [\r\n\t\t\t\t\t\tday[1],\r\n\t\t\t\t\t\tday[2],\r\n\t\t\t\t\t\tday[3],\r\n\t\t\t\t\t\tday[4],\r\n\t\t\t\t\t\tday[5],\r\n\t\t\t\t\t\tday[6],\r\n\t\t\t\t\t\tday[7],\r\n\t\t\t\t\t\tday[8],\r\n\t\t\t\t\t\tday[9],\r\n\t\t\t\t\t\tday[10],\r\n\t\t\t\t\t\tday[11],\r\n\t\t\t\t\t\tday[12],\r\n\t\t\t\t\t\tday[13],\r\n\t\t\t\t\t\tday[14],\r\n\t\t\t\t\t\tday[15],\r\n\t\t\t\t\t\tday[16],\r\n\t\t\t\t\t\tday[17],\r\n\t\t\t\t\t\tday[18],\r\n\t\t\t\t\t\tday[19],\r\n\t\t\t\t\t\tday[20],\r\n\t\t\t\t\t\tday[21],\r\n\t\t\t\t\t\tday[22],\r\n\t\t\t\t\t\tday[23],\r\n                        day[24],\r\n                        day[25],\r\n\t\t\t\t\t\tday[26],\r\n\t\t\t\t\t\tday[27],\r\n\t\t\t\t\t\tday[28],\r\n\t\t\t\t\t\tday[29],\r\n\t\t\t\t\t\tday[30],\r\n\t\t\t\t\t\tday[31],\r\n\t\t\t\t\t],\r\n\t\t\t\t\tbackgroundColor: [\"#54AEA9\"],\r\n\t\t\t\t\tborderWidth: borderWidth,\r\n\t\t\t\t\tpointRadius: pointRadius,\r\n\t\t\t\t\tpointHoverRadius: pointHoverRadius,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t});\r\n\t};\r\n\r\n\t//checks if user changes screen sizes manually and sets responsive chart\r\n\tconst AsyncResponsiveChart = () => {\r\n\t\twindow.addEventListener('resize', () => {\r\n\t\t\tif (window.innerWidth < 1781) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 12;\r\n\t\t\t\tsetPointRadius(4);\r\n\t\t\t\tsetPointHoverRadius(4);\r\n\t\t\t\tsetBorderWidth(4);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 1781 && window.innerWidth < 1900) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 15;\r\n\t\t\t\tsetPointRadius(6);\r\n\t\t\t\tsetPointHoverRadius(6);\r\n\t\t\t\tsetBorderWidth(6);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 1900 && window.innerWidth < 2137) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 18;\r\n\t\t\t\tsetPointRadius(7);\r\n\t\t\t\tsetPointHoverRadius(7);\r\n\t\t\t\tsetBorderWidth(7);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 2137 && window.innerWidth < 2850) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 20;\r\n\t\t\t\tsetPointRadius(8);\r\n\t\t\t\tsetPointHoverRadius(8);\r\n\t\t\t\tsetBorderWidth(8);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 2850 && window.innerWidth < 4275) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 25;\r\n\t\t\t\tsetPointRadius(9);\r\n\t\t\t\tsetPointHoverRadius(9);\r\n\t\t\t\tsetBorderWidth(9);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 4275) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 40;\r\n\t\t\t\tsetPointRadius(12);\r\n\t\t\t\tsetPointHoverRadius(12);\r\n\t\t\t\tsetBorderWidth(15);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//checks window size on mount and sets responsive chart\r\n\tconst MountResponsiveChart = () => {\r\n\t\tif (window.innerWidth < 1781) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 12;\r\n\t\t\tsetPointRadius(4);\r\n\t\t\tsetPointHoverRadius(4);\r\n\t\t\tsetBorderWidth(4);\r\n\t\t} \r\n\t\tif (window.innerWidth >= 1781 && window.innerWidth < 1900) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 15;\r\n\t\t\tsetPointRadius(6);\r\n\t\t\tsetPointHoverRadius(6);\r\n\t\t\tsetBorderWidth(6);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 1900 && window.innerWidth < 2137) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 18;\r\n\t\t\tsetPointRadius(7);\r\n\t\t\tsetPointHoverRadius(7);\r\n\t\t\tsetBorderWidth(7);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 2137 && window.innerWidth < 2850) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 20;\r\n\t\t\tsetPointRadius(8);\r\n\t\t\tsetPointHoverRadius(8);\r\n\t\t\tsetBorderWidth(8);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 2850 && window.innerWidth < 4275) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 25;\r\n\t\t\tsetPointRadius(9);\r\n\t\t\tsetPointHoverRadius(9);\r\n\t\t\tsetBorderWidth(9);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 4275) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 40;\r\n\t\t\tsetPointRadius(12);\r\n\t\t\tsetPointHoverRadius(12);\r\n\t\t\tsetBorderWidth(15);\r\n\t\t}\r\n\t}\r\n\r\n\t//runs responsive functions on mount and removes event listener on dismount\r\n\tuseEffect(() => {\r\n\t\tAsyncResponsiveChart();\r\n\t\tMountResponsiveChart();\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', AsyncResponsiveChart);\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div>\r\n            <StatsNavigation />\r\n            <div className=\"graph\" style={{width: '100%', height: '100%'}}>\r\n                <Line\r\n                    data={chartData}\r\n                    options={{\r\n\t\t\t\t\t\tresponsive: true,\r\n\t\t\t\t\t\tmaintainAspectRatio: false,\r\n                        title: { text: `Month Total: ${total}`, display: true },\r\n                        scales: {\r\n                            yAxes: [\r\n                                {\r\n                                    ticks: {\r\n                                        autoSkip: true,\r\n                                        maxTicksLimit: 10,\r\n                                        beginAtZero: true,\r\n                                    },\r\n                                    gridLines: {\r\n                                        display: false,\r\n                                    },\r\n                                },\r\n                            ],\r\n                            xAxes: [\r\n                                {\r\n                                    gridLines: {\r\n                                        display: false,\r\n                                    },\r\n                                },\r\n                            ],\r\n                        },\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n\t);\r\n};\r\n\r\nexport default MonthStats;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line, Chart } from \"react-chartjs-2\";\r\nimport API from './API';\r\nimport StatsNavigation from \"./StatsNavigation\";\r\n\r\nconst YearStats = ({setLoadingStyle}) => {\r\n\tconst [chartData, setChartData] = useState({});\r\n\tconst [month, setMonth] = useState({});\r\n\tconst [pointRadius, setPointRadius] = useState(4);\r\n\tconst [pointHoverRadius, setPointHoverRadius] = useState(4);\r\n\tconst [borderWidth, setBorderWidth] = useState(4);\r\n\tconst [total, setTotal] = useState(0);\r\n\tconst [dataLoaded, setDataLoaded] = useState(false);\r\n\tChart.defaults.global.defaultFontColor = \"#F8F9FA\";\r\n\r\n    //request data from server then set data for chart\r\n    useEffect(() => {\r\n        API.get(`/year`)\r\n            .then(function (response) {\r\n                let getMonths = response.data[0];\r\n                let getTotal = response.data[0].total;\r\n                \r\n                setMonth(getMonths);\r\n                setTotal(getTotal);\r\n                setDataLoaded(true);\r\n                setLoadingStyle(\"displayNone\")\r\n            })\r\n            .catch(function (error) {\r\n                if (error.response) {\r\n                    console.log(error.response)\r\n                }\r\n                if (error.request) {\r\n                    console.log(error.request)\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    //updates chart once data is fetched and when screen size changes\r\n\tuseEffect(() => {\t\r\n\t\tchart();\r\n\t}, [dataLoaded, pointRadius]);\r\n\t\r\n\tconst chart = () => {\r\n\t\tsetChartData({\r\n\t\t\tlabels: [\r\n\t\t\t\t\"1\",\r\n\t\t\t\t\"2\",\r\n\t\t\t\t\"3\",\r\n\t\t\t\t\"4\",\r\n\t\t\t\t\"5\",\r\n\t\t\t\t\"6\",\r\n\t\t\t\t\"7\",\r\n\t\t\t\t\"8\",\r\n\t\t\t\t\"9\",\r\n\t\t\t\t\"10\",\r\n\t\t\t\t\"11\",\r\n\t\t\t\t\"12\",\r\n\t\t\t],\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: \"Pomodoros Completed\",\r\n\t\t\t\t\tdata: [\r\n\t\t\t\t\t\tmonth[0],\r\n\t\t\t\t\t\tmonth[1],\r\n\t\t\t\t\t\tmonth[2],\r\n\t\t\t\t\t\tmonth[3],\r\n\t\t\t\t\t\tmonth[4],\r\n\t\t\t\t\t\tmonth[5],\r\n\t\t\t\t\t\tmonth[6],\r\n\t\t\t\t\t\tmonth[7],\r\n\t\t\t\t\t\tmonth[8],\r\n\t\t\t\t\t\tmonth[9],\r\n\t\t\t\t\t\tmonth[10],\r\n\t\t\t\t\t\tmonth[11],\r\n\t\t\t\t\t],\r\n\t\t\t\t\tbackgroundColor: [\"#54AEA9\"],\r\n\t\t\t\t\tborderWidth: borderWidth,\r\n\t\t\t\t\tpointRadius: pointRadius,\r\n\t\t\t\t\tpointHoverRadius: pointHoverRadius,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t});\r\n\t};\r\n\r\n\t//checks if user changes screen sizes manually and sets responsive chart\r\n\tconst AsyncResponsiveChart = () => {\r\n\t\twindow.addEventListener('resize', () => {\r\n\t\t\tif (window.innerWidth < 1781) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 12;\r\n\t\t\t\tsetPointRadius(4);\r\n\t\t\t\tsetPointHoverRadius(4);\r\n\t\t\t\tsetBorderWidth(4);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 1781 && window.innerWidth < 1900) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 15;\r\n\t\t\t\tsetPointRadius(6);\r\n\t\t\t\tsetPointHoverRadius(6);\r\n\t\t\t\tsetBorderWidth(6);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 1900 && window.innerWidth < 2137) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 18;\r\n\t\t\t\tsetPointRadius(7);\r\n\t\t\t\tsetPointHoverRadius(7);\r\n\t\t\t\tsetBorderWidth(7);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 2137 && window.innerWidth < 2850) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 20;\r\n\t\t\t\tsetPointRadius(8);\r\n\t\t\t\tsetPointHoverRadius(8);\r\n\t\t\t\tsetBorderWidth(8);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 2850 && window.innerWidth < 4275) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 25;\r\n\t\t\t\tsetPointRadius(9);\r\n\t\t\t\tsetPointHoverRadius(9);\r\n\t\t\t\tsetBorderWidth(9);\r\n\t\t\t}\r\n\t\t\tif (window.innerWidth >= 4275) {\r\n\t\t\t\tChart.defaults.global.defaultFontSize = 40;\r\n\t\t\t\tsetPointRadius(12);\r\n\t\t\t\tsetPointHoverRadius(12);\r\n\t\t\t\tsetBorderWidth(15);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//checks window size on mount and sets responsive chart\r\n\tconst MountResponsiveChart = () => {\r\n\t\tif (window.innerWidth < 1781) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 12;\r\n\t\t\tsetPointRadius(4);\r\n\t\t\tsetPointHoverRadius(4);\r\n\t\t\tsetBorderWidth(4);\r\n\t\t} \r\n\t\tif (window.innerWidth >= 1781 && window.innerWidth < 1900) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 15;\r\n\t\t\tsetPointRadius(6);\r\n\t\t\tsetPointHoverRadius(6);\r\n\t\t\tsetBorderWidth(6);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 1900 && window.innerWidth < 2137) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 18;\r\n\t\t\tsetPointRadius(7);\r\n\t\t\tsetPointHoverRadius(7);\r\n\t\t\tsetBorderWidth(7);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 2137 && window.innerWidth < 2850) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 20;\r\n\t\t\tsetPointRadius(8);\r\n\t\t\tsetPointHoverRadius(8);\r\n\t\t\tsetBorderWidth(8);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 2850 && window.innerWidth < 4275) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 25;\r\n\t\t\tsetPointRadius(9);\r\n\t\t\tsetPointHoverRadius(9);\r\n\t\t\tsetBorderWidth(9);\r\n\t\t}\r\n\t\tif (window.innerWidth >= 4275) {\r\n\t\t\tChart.defaults.global.defaultFontSize = 40;\r\n\t\t\tsetPointRadius(12);\r\n\t\t\tsetPointHoverRadius(12);\r\n\t\t\tsetBorderWidth(15);\r\n\t\t}\r\n\t}\r\n\r\n\t//runs responsive functions on mount and removes event listener on dismount\r\n\tuseEffect(() => {\r\n\t\tAsyncResponsiveChart();\r\n\t\tMountResponsiveChart();\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', AsyncResponsiveChart);\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div>\r\n            <StatsNavigation />\r\n            <div className=\"graph\" style={{width: '100%', height: '100%'}}>\r\n                <Line\r\n                    data={chartData}\r\n                    options={{\r\n\t\t\t\t\t\tresponsive: true,\r\n\t\t\t\t\t\tmaintainAspectRatio: false,\r\n                        title: { text: `Year Total: ${total}`, display: true },\r\n                        scales: {\r\n                            yAxes: [\r\n                                {\r\n                                    ticks: {\r\n                                        autoSkip: true,\r\n                                        maxTicksLimit: 10,\r\n                                        beginAtZero: true,\r\n                                    },\r\n                                    gridLines: {\r\n                                        display: false,\r\n                                    },\r\n                                },\r\n                            ],\r\n                            xAxes: [\r\n                                {\r\n                                    gridLines: {\r\n                                        display: false,\r\n                                    },\r\n                                },\r\n                            ],\r\n                        },\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n\t);\r\n};\r\n\r\nexport default YearStats;\r\n\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\r\nimport Timer from './Timer';\r\nimport DayStats from './DayStats';\r\nimport WeekStats from './WeekStats';\r\nimport MonthStats from './MonthStats';\r\nimport YearStats from './YearStats';\r\nimport ChangeTimer from './ChangeTimer';\r\nimport { UnityContext } from \"react-unity-webgl\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst unityContext = new UnityContext({\r\n    loaderUrl: \"build/build.loader.js\",\r\n    dataUrl: \"build/build.data\",\r\n    frameworkUrl: \"build/build.framework.js\",\r\n    codeUrl: \"build/build.wasm\",\r\n});\r\n\r\nconst App = () => {\r\n\tconst [loadingStyle, setLoadingStyle] = useState(\"text-center loading displayInline !important\");\r\n\tconst [workTime, setWorkTime] = useState(1500000); //1500000\r\n\tconst [restTime, setRestTime] = useState(300000); //300000\r\n\tconst nav = useRef(null);\r\n    const navigate = useNavigate();\r\n\r\n\t//hides nav when clicked outside of div\r\n\tfunction useOutsideAlerter(ref) {\r\n\t\tuseEffect(() => {\r\n\t\t\tfunction handleClickOutside(event) {\r\n\t\t\t\tif (ref.current && !ref.current.contains(event.target) && nav.current.style.right === \"0px\") {\r\n\t\t\t\t\tnav.current.style.right = \"-60%\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// Bind the event listener\r\n\t\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\r\n\t\t\treturn () => {\r\n\t\t\t\t// Unbind the event listener on clean up\r\n\t\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\r\n\t\t\t};\r\n\r\n\t\t}, [ref]);\r\n\t}\r\n\r\n\tuseOutsideAlerter(nav);\r\n\r\n\tfunction showNav() {\r\n\t\tnav.current.style.right = \"0px\";\r\n\t}\r\n\r\n\tfunction hideNav() {\r\n\t\tnav.current.style.right = \"-60%\";\r\n\t}\r\n\r\n    async function LinkToHome () {\r\n        nav.current.style.right = \"-60%\";\r\n        navigate(\"/\");\r\n    }\r\n\r\n    async function LinkToStats () {\r\n        nav.current.style.right = \"-60%\";\r\n        //closes unity and links to page\r\n        await unityContext.quitUnityInstance()\r\n        navigate(\"/stats/day\");\r\n    }\r\n\r\n\treturn (\r\n\t\t<div>\r\n            <Routes>\r\n                <Route \r\n                    exact path=\"/\" \r\n                    element={\r\n                        <Timer \r\n                            setLoadingStyle={setLoadingStyle}\r\n                            restTime={restTime} \r\n                            workTime={workTime} \r\n                            unityContext={unityContext}\r\n                        />\r\n                    }\r\n                />\r\n                <Route \r\n                    path=\"/stats/day\"\r\n                    element={\r\n                        <DayStats \r\n                            setLoadingStyle={setLoadingStyle} \r\n                        />\r\n                    }\r\n                />\r\n                <Route \r\n                    path=\"/stats/week\"\r\n                    element={\r\n                        <WeekStats \r\n                            setLoadingStyle={setLoadingStyle} \r\n                        />\r\n                    }\r\n                />\r\n                <Route \r\n                    path=\"/stats/month\"\r\n                    element={\r\n                        <MonthStats \r\n                            setLoadingStyle={setLoadingStyle} \r\n                        />\r\n                    }\r\n                />\r\n                <Route \r\n                    path=\"/stats/year\"\r\n                    element={\r\n                        <YearStats \r\n                            setLoadingStyle={setLoadingStyle} \r\n                        />\r\n                    }\r\n                />\r\n            </Routes>\r\n            <div className=\"mhead\">\r\n                <img className=\"menu-ham\" src=\"/img/hamburger.png\" onClick={showNav} alt=\"\" />\r\n            </div>\r\n            <div className=\"menu\" ref={nav}>\r\n                <div className=\"close-menu\">\r\n                    <img src=\"/img/exit.png\" onClick={hideNav} className=\"menu-exit\" alt=\"\" />\r\n                </div>\r\n                <ul>\r\n                    <button onClick={() => LinkToHome()}>\r\n                        <li>Pomodoro</li>\r\n                    </button>\r\n                    <button onClick={() => LinkToStats()}>\r\n                        <li>Statistics</li>\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./css/style.css\";\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>, \r\n    document.querySelector(\"#root\")\r\n);\r\n\r\n"],"sourceRoot":""}